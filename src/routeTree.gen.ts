/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard.index'
import { Route as DashboardUsersImport } from './routes/dashboard.users'
import { Route as DashboardStatisticsImport } from './routes/dashboard.statistics'
import { Route as DashboardProfileImport } from './routes/dashboard.profile'
import { Route as DashboardPatientIdImport } from './routes/dashboard.$patientId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardStatisticsRoute = DashboardStatisticsImport.update({
  path: '/statistics',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPatientIdRoute = DashboardPatientIdImport.update({
  path: '/$patientId',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/$patientId': {
      preLoaderRoute: typeof DashboardPatientIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/profile': {
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/statistics': {
      preLoaderRoute: typeof DashboardStatisticsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/users': {
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardRoute.addChildren([
    DashboardPatientIdRoute,
    DashboardProfileRoute,
    DashboardStatisticsRoute,
    DashboardUsersRoute,
    DashboardIndexRoute,
  ]),
])

/* prettier-ignore-end */
